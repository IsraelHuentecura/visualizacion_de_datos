---
title: "Informe Exoplanetas"
format:
  html:
    code-fold: true
    number-sections: true
    toc: true
author:
  - name: Israel Huentecura
    email: Israel.Huentecura@mayor.cl
jupyter: python3
---



# Informe de Análisis de Exoplanetas
- **[a]** **Audiencia**
Este informe está destinado a mis compañeros de la Universidad X, específicamente aquellos que están en el grupo de Ciencias Planetarias. Como estudiantes incipientes de ciencias planetarias, tienen un conocimiento básico de la astronomía y un interés en el descubrimiento de exoplanetas.

- **[b]** **Mensaje**
El mensaje principal que quiero transmitir es una comprensión clara y concisa de los descubrimientos de exoplanetas a lo largo del tiempo, con un enfoque en las técnicas de descubrimiento más comunes y las relaciones entre varias características planetarias.

- **[c]** **Presentación de la Información**
Para mostrar la información, he optado por utilizar gráficos de barras y de histograma. Estos gráficos son efectivos para mostrar distribuciones de datos y comparaciones entre categorías. Por ejemplo, un gráfico de barras es útil para comparar la cantidad de exoplanetas descubiertos por cada método, mientras que un histograma es útil para visualizar la distribución de los años de descubrimiento.

- **[d]** **Diseño de Visualizaciones**
Las visualizaciones se han diseñado de manera estratégica para captar la atención y transmitir información de manera eficaz. He utilizado títulos descriptivos y claros, leyendas para explicar qué representa cada color en los gráficos, y anotaciones para destacar puntos de interés. Además, he eliminado cualquier distracción innecesaria, como la cuadrícula de fondo, para que los datos sean el foco principal.

# Importar las librerias necesarias.

- Primero importamos pandas para estructuras de datos y herramientas de análisis de datos de alto rendimiento. Es especialmente bueno para trabajar con datos tabulares (como datos en hojas de cálculo de Excel o bases de datos SQL).

- Luego, se importa la biblioteca numpy con el alias np Proporciona funciones matemáticas que son capaces de realizar cálculos en arrays completos de datos sin la necesidad de loops.

- Después, se importa Matplotlib, una biblioteca para la creación de gráficos.

- Finalmente, se importa la biblioteca seaborn con el alias sns. Seaborn es una biblioteca de visualización de datos de Python basada en matplotlib. Proporciona una interfaz de alto nivel para dibujar gráficos estadísticos atractivos e informativos.

```{python}
#| label: Importaciones

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
```

# Cargamos los datos y selección de variables
Primero, se utiliza la función pd.read_csv() de la biblioteca pandas para cargar los datos desde un archivo CSV. El argumento './data/PS_2024.04.02_11.16.01.csv' es la ruta al archivo CSV que se desea cargar. El argumento low_memory=False se utiliza para asegurar que pandas lea más eficientemente los datos cuando se tienen columnas con diferentes tipos de datos.

Después, se crea una lista llamada col_list que contiene los nombres de las columnas que se desean mantener en el DataFrame. Estas columnas son 'pl_name', 'discoverymethod', 'disc_year','pl_orbper','soltype', 'pl_rade','pl_masse' y 'st_mass'. Estos podrían ser, por ejemplo, el nombre del planeta, el método de descubrimiento, el año de descubrimiento, el periodo orbital, el tipo de sol, el radio del planeta, la masa del planeta y la masa de la estrella, respectivamente.

Finalmente, se seleccionan solo las columnas de interés del DataFrame original df utilizando la lista col_list y se sobrescribe el DataFrame original con este nuevo DataFrame que contiene solo las columnas de interés.

```{python}
#| label: Carga de datos

df = pd.read_csv('./data/PS_2024.04.02_11.16.01.csv')
# Dejar solo planeta confirmados, metodo deteccion, nombre planeta, periodo orbital, año de descubrimiento, masa y radio del planeta tierra
col_list = ['pl_name', 'discoverymethod', 'disc_year','pl_orbper','soltype', 'pl_rade','pl_masse','st_mass']
df = df[col_list]
# Traducir nombres de columnas
df.columns = ['Nombre', 'Metodo de descubrimiento', 'Año', 'Periodo Orbital', 'Tipo Estrella', 'Radio Planeta', 'Masa Planeta', 'Masa Estrella']
```

# Configurar estilo 

Principal enfoque de encontrar una estetica limpia eliminando cualquier distracción innecesaria.

```{python}
# Crear mi estilo de graficos
sns.set_theme(style='white')
# Quitar eje superior y derecho
sns.set(style='white', rc={'axes.spines.right': False, 'axes.spines.top': False})
```

# Vamos a gráficar para observar el los métodos más usados, ver @fig-methods.

```{python}
#| label: fig-methods
#| fig-cap: "Cantidad de planetas descubiertos por cada método"

# Dejar planetas confirmados unicos
df_filter = df.drop_duplicates(subset=['Nombre'])
# Dropear columna pl_name
df_filter = df_filter.drop(columns=['Nombre'])
# Hacer histograma de años disc_year vs metodos de descubrimiento discoverymethod
sns.histplot(data=df_filter, x='Año', hue='Metodo de descubrimiento', multiple='stack')
# Traducir al español
plt.xlabel('Año de descubrimiento')
plt.ylabel('Cantidad de planetas')
plt.title('Cantidad de planetas descubiertos por año')
plt.show()

```

# Las 3 tecnicas de descubrimiento mas comunes, ver @fig-count.
 En esta sección a traves de un conteo de los planetas decubiertos y con la herramienta de un gráfico de barra podemos observar lo siguiente

```{python}
#| label: fig-count
#| fig-cap: "3 principales métodos de descubrimiento"
#| 
# Cuales son las 3 tecnicas de descubrimiento mas comunes
comunes_3 = df_filter['Metodo de descubrimiento'].value_counts().head(3)

# Gráfico de barras de las 3 tecnicas de descubrimiento mas comunes, en el eje x tiene que estar desde el 0 hasta el 80
plt.figure()
ax = sns.countplot(data=df_filter, y='Metodo de descubrimiento', order=comunes_3.index, palette='Set3')

# Agregar números en las barras anteponiendo #
for p in ax.patches:
  ax.annotate(f"#{p.get_width()}", (p.get_width(), p.get_y()+p.get_height()/2), ha='left', va='center')

plt.xlabel('')
# Quitar ticks del eje x
plt.xticks([])

```

## Método de Tránsito:  

Este método se basa en la observación de la disminución de la luz de una estrella cuando un planeta pasa frente a ella, es decir, cuando el planeta “transita” la estrella. La cantidad de luz que se bloquea nos da una indicación del tamaño del planeta. Además, el tiempo que tarda el planeta en pasar frente a la estrella nos puede dar información sobre su órbita.

**A partir de los datos sabemos que este es ampliamente el método por el cual más planetas se han descubierto**

## Velocidad Radial o Método Doppler:

 Este método se basa en la detección de pequeños cambios en la velocidad de una estrella causados por la gravedad de un planeta en órbita. Cuando un planeta orbita una estrella, la gravedad del planeta tira de la estrella, causando un pequeño “tambaleo” en su movimiento. Este tambaleo puede detectarse como un cambio en la longitud de onda de la luz de la estrella (un efecto conocido como desplazamiento Doppler). Los cambios en la velocidad radial pueden indicar la presencia de un planeta.

## Imagen Directa:

 Este método implica la captura de imágenes directas de los exoplanetas. Es el método más desafiante porque las estrellas son mucho más brillantes que los planetas que las orbitan, lo que hace que los planetas sean difíciles de ver. Las técnicas para este método incluyen el uso de coronógrafos para bloquear la luz de la estrella y revelar los planetas, y técnicas de procesamiento de imágenes para eliminar la luz de las estrellas.


# Correlación gráfico, ver @fig-correlation.

Al enfrentar la masa del planeta vs el radio del planeta podemos observar el siguiente gráfico:

```{python}
#| label: fig-correlation
#| fig-cap: "Masa de cada planeta vs Radio de cada planeta"
#| 
# Existe una relacion entre la masa del planeta y el radio del planeta?
# Incluir incertezas de cada valor
# Hacer un scatter plot con los valores de masa y radio
plt.figure()
plt.xscale('log')
plt.yscale('log')
plt.xlabel('Masa del planeta (Masa de la Tierra)')
plt.ylabel('Radio del planeta (Radio de la Tierra)')
sns.scatterplot(data=df, x='Masa Planeta', y='Radio Planeta', alpha=0.5)
```
Al ver el gráfico observamos una sutil relación lineal entre estas variables, es necesario usar una medida para cuantificar esta relación

## Coeficiente Correlación de Pearson 
Calculamos cual es la relación lineal de esta variables enfrentadas


```{python}
# Calcular la correlacion entre masa y radio
correlation = df['Masa Planeta'].corr(df['Radio Planeta'])
print(correlation)
```

Este coeficiente nos dice que si hay una dependencia lineal entre estas variables y esa relación es positiva (proporcional) pero su magnitud no es tan significante.

# Conclusión

Este estudio sobre exoplanetas nos lleva a una intersección fascinante entre la tecnología observacional avanzada y una comprensión cada vez más profunda de la diversidad planetaria en nuestra galaxia. La predominancia del método de tránsito en el descubrimiento de exoplanetas resalta su eficacia para detectar cuerpos celestes distantes. Esto se logra mediante la observación precisa de la atenuación de la luz estelar durante el tránsito planetario. Esta técnica, en combinación con la velocidad radial y la imagen directa, ha desencadenado una era de descubrimientos que nos desafía a repensar nuestras concepciones sobre los planetas.

Aunque la correlación entre la masa y el radio de los exoplanetas es moderada y no excepcionalmente significativa, sugiere que las propiedades físicas de estos mundos distantes están influenciadas por complejos procesos de formación y evolución. Este hallazgo plantea preguntas fascinantes sobre la diversidad de composiciones planetarias, los mecanismos de acreción y la dinámica atmosférica en sistemas estelares más allá del nuestro.

En última instancia, este estudio no solo profundiza nuestra apreciación de la vasta variedad de exoplanetas que pueblan la galaxia, sino que también abre nuevas vías de investigación. Estas investigaciones buscan comprender los mecanismos fundamentales que dan forma a estos mundos remotos, enriqueciendo así nuestra visión del cosmos y nuestro lugar dentro de él.